name: build-release

on:
  push:
    branches: [1.14-1.14.4]
  pull_request:
    branches: [1.14-1.14.4]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-24.04
    outputs:
      build-files: ${{ steps.prepare.outputs.build-files }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - uses: gradle/actions/wrapper-validation@v4

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/loom-cache
            ~/.gradle/configuration-cache
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/gradle.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon --parallel --build-cache --configure-on-demand --configuration-cache

      - name: Prepare artifacts
        id: prepare
        run: |
          echo "build-files=build/libs" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/libs/
          retention-days: 10

  release:
    runs-on: ubuntu-24.04
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/1.14-1.14.4'

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: build-output
          path: build/libs/

      - name: Compute next build number
        id: version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          DATE=$(TZ=Asia/Shanghai date +%Y%m%d)
          PREFIX="Build.${DATE}"

          MAX=$(gh api repos/${{ github.repository }}/releases \
                --jq '[.[].tag_name | select(startswith("AutoTheme+\(env.PREFIX)"))] | map(split(".")[-1] | tonumber) | max // 0')

          NEXT=$((MAX + 1))
          VERSION="${PREFIX}.${NEXT}"
          FULL_VERSION="AutoTheme+${VERSION}"

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT

      - name: Pack artifacts
        run: |
          cd build/libs
          zip -9 -r "../../${{ env.FULL_VERSION }}.zip" *

      - name: Pack source
        run: |
          git archive --format=zip \
            --output="${{ env.FULL_VERSION }}-Source.zip" HEAD

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.FULL_VERSION }}
          name: ${{ env.FULL_VERSION }}
          files: |
            ${{ env.FULL_VERSION }}.zip
            ${{ env.FULL_VERSION }}-Source.zip
          generate_release_notes: true
          draft: false
          prerelease: false
